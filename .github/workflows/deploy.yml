name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Change if you're using a different branch
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'  # Update Python version if needed

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # Deploy only when pushing to main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          # Start the SSH agent
          eval "$(ssh-agent -s)"
          
          # Add private key from GitHub Secrets to the SSH agent
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -
          
          # Create SSH directory and set proper permissions
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # Add the server's public key to the known_hosts file to avoid SSH verification issues
          touch ~/.ssh/known_hosts
          ssh-keyscan -H 159.223.113.204 >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy to DigitalOcean
        run: |
          set -x  # Enable verbose mode
          pwd
          ls -l
          if [ -d "test/deploy_django" ]; then
            echo "Directory exists"
          else
            echo "Directory does not exist"
            exit 1
          fi
          cd test/deploy_django
          git pull origin main
          source venv/bin/activate
          pip install -r requirements.txt
          python manage.py migrate
          sudo systemctl restart gunicorn  # Restart Gunicorn service
          sudo systemctl restart nginx  # Restart Nginx service
